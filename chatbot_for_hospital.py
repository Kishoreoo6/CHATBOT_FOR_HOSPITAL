# -*- coding: utf-8 -*-
"""chatbot for hospital.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IGekeLU9BFUzIPq30Sxvu1ql6lmbtuTR
"""

import re
from nltk.chat.util import Chat, reflections
patterns = [
    (r'hi|hello|hey', ['Hi there!', 'Hello!', 'Hey!']),
    (r'how are you?', ['I am doing well, thank you!', 'I\'m good, thanks for asking.']),
    (r'what is your name?', [ 'You can call me Doc OCTO.']),
    (r'(is) (doctor) (available) (on) (\w+) (at) (\d{1,2} ?[apAP][mM])', ['I will check the availability for you.']),
    (r'(doctor) (availability)', ['Our doctors are available Monday to Friday from 9 AM to 5 PM.', 'You can visit our clinic for a consultation during weekdays between 9 AM to 5 PM.']),
    (r'(hospital) (services)', ['Our hospital provides a range of services including consultations, surgeries, and emergency care.']),
    (r'(hospital) (management)', ['Our hospital is managed by team applo ensuring quality patient care and efficient operations.']),
    (r'(beds) (availability)', ['Our hospital has a total of 500 beds including 100 ICU wards.From which around 250 are free now']),
    (r'(food) (availability)', ['Our hospital has mess facilities 24 hours']),
    (r'(departments) (specializations)', ['Key departments include cardiology, orthopedics, pediatrics, and radiology. Each department specializes in specific medical areas.']),
    (r'(hospital) (location)', ['We are located at coimbatore main road sathymangalam.']),
    (r'(technology) (implementation)', ['The hospital adopts cutting-edge technologies such as electronic health records (EHR) and telemedicine for enhanced patient care.']),
    (r'(appointment) (booking)', ['You can book an appointment by calling our reception "0223-123123" or using our online booking system."www.Strombreakerhealthcare.com"']),
    (r'(insurance) (accepted)', ['We accept a variety of insurance plans. Please check with our billing department for specific details.'])
    (r'(cost) (of) (services)', ['Our billing department can provide you with information about the cost of specific services. call "0223-123123" ']),
    (r'(waiting) (time)', ['Our goal is to minimize waiting times, and we appreciate your patience.']),
    (r'(feedback) (process)', ['We value your feedback! You can provide feedback through our website "www.Strombreakerhealthcare.com" or directly to our patient services department.']),
    (r'(contact) (information)', ['You can reach us at strombreakerhealthcare@gmail.com or call "0223-123123".']),
    (r'quit', ['Goodbye!', 'Bye!', 'See you later.']),
    (r'end', ['Goodbye!', 'Bye!', 'See you later.']),
    (r'bye', ['Goodbye!', 'Bye!', 'See you later.']),
]

chatbot = Chat(patterns, reflections)

def check_doctor_availability(day, time):

    if day.lower() == 'monday' and time.lower() == '4pm':
        return 'No, the doctor is not available on Monday at 4 PM.'
    else:
        return 'Yes, the doctor is available.'


def hospital_services():
    return 'Our hospital provides a range of services including consultations, surgeries, and emergency care.'

def hospital_management():
    return 'Our hospital is managed by a dedicated team ensuring quality patient care and efficient operations.'



print("Hello! I'm Doc OCTO, your friendly chatbot for strombreaker health care. Type 'quit' to exit.")
print("")
print("")
print('I CAN HELP YOU WITH "doctor availability","hospital management","beds availability","food availability\n","bed availability","department specialization","technology implementation","cost of service","waiting time","feedback process"')
print("")
print("")
while True:
    user_input = input("You: ")

    if user_input.lower() == 'quit':
        print("DocBot: Goodbye!")
        break

    availability_match = re.match(r'(is) (doctor) (available) (on) (\w+) (at) (\d{1,2} ?[apAP][mM])', user_input)
    if availability_match:
        _, _, _, _, day, _, time = availability_match.groups()
        availability_response = check_doctor_availability(day, time)
        print(f"DocBot: {availability_response}")
    else:

        services_match = re.search(r'(hospital) (services)', user_input)
        management_match = re.search(r'(hospital) (management)', user_input)

        if services_match:
            print(f"DocBot: {hospital_services()}")
        elif management_match:
            print(f"DocBot: {hospital_management()}")
        else:
            response = chatbot.respond(user_input)
            print(f"DocBot: {response}")